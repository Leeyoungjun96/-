# 빅데이터 시대의 데이터 분석 기반

### NoSQL : 애플리케이션에서 온라인으로 접속하는 데이터베이스
• 키 밸류 스토어(key-value Store/KVS) : 다수의 키와 값을 관련지어 저장
  도큐멘트 스토어(Document Store) : JSON과 같은 복잡한 데이터 구조를 저장
  와이드 칼럼 스토어(Wide-column Store) : 여러 키를 사용하여 높은 확장성을 제공
  그래프 스토어(Graph Store) : 그래프 데이터베이스는 노드를 사용하여 데이터 엔터티를 저장, 엣지로는 엔티티 간의 관계를 저장
• NoSQL에 저장하고 Hadoop으로 분산 처리하기
• 업무시스템 -> RDB -> Hadoop -> 데이터 웨어하우스(데이터 웨어하우스의 부하를 줄임)

### 데이터 디스커버리의 기초지식
• 데이터 디스커버리 : 대화형으로 데이터를 시각화하여 가치 있는 정보를 찾으려고 하는 프로세스
                   셀프서비스용 BI 도구로 불림(BI 도구 : 데이터 웨어하우스와 조합되어 사용된 경영자용 시각화 시스템)

### 데이터 파이프라인 : 일반적으로 차례대로 전달해나가는 데이터로 구성된 시스템
• 데이터 수집 (벌크형과 스트리밍형의 데이터 전송)
    • 벌크형 : 어딘가에 존재하는 데이터를 정리해 추출하는 방법, 데이터베이스와 파일 서버 등에서 정기적으로 데이터를 수집하는데에 사용
    • 스트리밍 형 : 차례로 생성되는 데이터를 끊임없이 계속해서 보내는 방법으로 모바일 애플리케이션과 임베디드 장비 등에서 사용
        • 스트림 처리 : 실시간으로 발생하는 데이터를 처리
    • 분산 스토리지(Distributed Storage) : 여러 컴퓨터와 디스크로부터 구성된 스토리지 시스템
        • 객체 스토리지 한 덩어리로 모인 데이터에 이름을 부여해서 파일로 저장 ex) Amazon S3

### 분산 데이터 처리 : 쿼리 엔진, ETL 프로세스
• 쿼리 엔진 : 분산 스토리지 상의 데이터를 SQL로 집계함
• ETL 프로세스 : 분산 스토리지에서 추출한 데이터를 외부의 데이터 웨어하우스에 적합한 형식으로 변환(Extract, Transform, Load)
    • ETL : 데이터 소스 -> (Extract) Transform (Load) -> DB : 데이터 베이스의 바깥에서 데이터를 가공하는 경우
    • ELT : 데이터 소스 -> (Extract & Load) DB -> Transform : 데이터를 읽어 들인 후에 가공하는 경우

### 워크플로 관리 : 매일 정해진 시간에 배치 처리를 스케줄대로 실행, 오류 발생시 관리자에게 통지

### 데이터 웨어하우스와 데이터 마트 : 데이터 파이프 라인의 기본형
•       데이터 소스         -(ETL)->     데이터 웨어 하우스       -(ETL)->         데이터 마트          <-(SQL)- 시각화 도구
 (테이블 로그 등의 원시 데이터)        (장기 보존용으로 정리한 테이블)         (분석용으로 일부를 추출한 데이터)

• 데이터 웨어하우스는 웹 서버나 업무 시스템에 이용되는 일반적인 RDB와 달리 대량의 데이터를 장기 보존하는것에 최적화 되어있음
  데이터 웨어하우스의 측면에 봤을 때, 업무 시스템을 위한 RDB나 로그 등을 저장하는 파일 서버는 데이터 소스(Data Source)라고 부름
  보존된 로우 데이터(Row Data)를 추출하고 필요에 따라 가공한 후 데이터 웨어하우스에 저장하기까지의 흐름이 ETL 프로세스

• 데이터 웨어하우스는 아무때나 함부로 사용하여 시스템 과부화를 초래하는것은 곤란하여, 데이터 분석과 같은 목적에 사용하는 경우 필요한 데이터만을
  추출하여 데이터 마트(Data Mart)를 구축함, 데이터 마트는 BI 도구와 조합시키는 형테로 데이터를 시가고하하는 데에도 사용

### 데이터 레이크 : 데이터를 그대로 축적
• 우선 데이터가 있고 나중에 테이블을 설계하는 것이 빅데이터, 데이터 레이크에서는 모든 데이터를 그대로 저장하고 나중에 필요한것만 꺼내서 사용
• 빅데이터의 세계에서 여러 곳에서 데이터가 흘러들어 오는 '데이터를 축적하는 호수'에 비유해 데이터의 축적 장소를 데이터 레이크(Data Lake)라고 부름

### 데이터 레이크와 데이터 마트 : 필요한 데이터는 데이터 마트에 정리
• 데이터 레이크는 단순한 스토리지임, MapReduce 등의 분산 데이터 처리 기술을 이용하여 데이터를 가공

## 데이터 분석 기반을 단계적으로 발전시키기 : 팀과 역할 분담, 스몰 스타트와 확장
• 데이터 소스 -> 데이터 레이크 -> 데이터 마트 <- 시각화 도구

### 애드 혹 분석 및 대시보드 도구
• 애드 혹 분석(ad hoc analysis) : 일회성 데이터 분석
• 데이터 레이크 <- 애드 혹 분석 도구, 대시보드 도구
• 데이터 마트와 워크플로 관리의 도입
    • 데이터 레이크 -> 데이터 마트 <- BI 도구
        <- 애드 혹 분석 도구 ->
         (  워크플로 관리  )

* 데이터 파이프라인의 큰 흐름은 변하지 않는다 : 도구 선택의 두 가지 힌트 ( 워크플로 관리가 중요)
    • 저장할 수 있는 데이터 용량에 제한이 없을 것
    • 데이터를 효율적으로 추출할 수단이 있을 것
    데이터 수집 -> 분산 스토리지 -> 분산 데이터 처리 -> 데이터 마트 -> 시각화 도구
      (   계속적으로 이용    )         (           치환 가능           )

### 데이터 마트와 워크플로 관리
• 시각화에 BI 도구를 사용할 경우는 집계 속도를 높이기 위해 데이터 마트가 거의 필수적임
• 데이터마트 구축은 배치 처리로 자동화되는 경우가 많기 때문에 그 실행 관리를 위해 워크플로 관리 도구 사용

## 데이터를 수집하는 목적 : 검색, 가공, 시각화
• 데이터 검색 : 너무 많은 시간이 걸리는 것은 의미 없음, 필요할 때 신속하게 검색 가능하도록 실시간 데이터 처리나, 검색엔진을 사용하여 키워드를 찾는 기능이 필요
• 데이터 가공 : 데이터의 가공에는 자동화가 필수, 워크플로 관리를 도입하여 테스트를 반복적으로 실행해서 시스템을 구축
• 데이터 시각화 : 임의의 분석 환경을 갖추고 여러번 데이터 집계를 반복, 고속화하려면 데이터 마트도 필요, 집계 결과를 대시보드에 정리해서 계속 변화를 감시하고 싶을 떄도 데이터 시각화 필요

* 기간계 시스템(Mission-Critical System)과 정보계 시스템(Information System)을 분리
• 기간계 시스템 : 비즈니스 근간에 관련된 중요한 시스템, 실행 과정을 로그 파일이나 데이터베이스에 기록
• 정보계 시스템 : 사내 커뮤니케이션과 의사 결정 등을 위해 이용하는 시스템, 데이터를 복사하는 데서부터 시작
• 기간계 시스템 일부를 빅데이터로 통합하지 않으면, 데이터 분석 시스템은 원칙적으로 '정보계 시스템'으로 모든 데이터는 처음에 복사하는 것부터 시작

## 확증적 데이터 분석과 탐색적 데이터 분석
• 확증적 데이터 분석 : 가설을 세우고 검증, 통계학적 모델링에 의한 데이터 분석
• 탐색적 데이터 분석 : 데이터를 보면서 그 의미를 읽어냄, 시각화하여 사람의 힘으로 분석
* 스몰 데이터 탐색 : 분산 시스템을 전혀 사용하지 않는 한 대의 컴퓨터로 데이터 탐색

# 스크립트 언어에 의한 특별 분석과 데이터 프레임
## 데이터 처리와 스크립트 언어 : 파이썬과 데이터 프레임임
